<?php
require_once 'PHPUnit/Framework.php';

require_once JPATH_BASE . '/libraries/joomla/mail/mail.php';

/**
 * Test class for JMail.
 * Generated by PHPUnit on 2009-10-27 at 15:17:07.
 */
class JMailTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var JMail
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
//		$this->object = new JMail;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 * @todo Implement testGetInstance().
	 */
	public function testGetInstance()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testSend().
	 */
	public function testSend()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testSetSender().
	 */
	public function testSetSender()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testSetSubject().
	 */
	public function testSetSubject()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testSetBody().
	 */
	public function testSetBody()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testAddRecipient().
	 */
	public function testAddRecipient()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testAddCC().
	 */
	public function testAddCC()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testAddBCC().
	 */
	public function testAddBCC()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testAddAttachment().
	 */
	public function testAddAttachment()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testAddReplyTo().
	 */
	public function testAddReplyTo()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testUseSendmail().
	 */
	public function testUseSendmail()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	public function useSmtpData()
	{
		return array(
			'SMTP without Authentication' => array(
				null,
				'example.com',
				null,
				null,
				false,
				null,
				array(
					'called' => 'IsSMTP',
					'return' => true
				)
			)
		);
	}

	/**
	 * @todo Implement testUseSMTP().
	 * @dataProvider useSmtpData
	 */
	public function testUseSMTP($auth, $host, $user, $pass, $secure, $port, $expected)
	{
		$mail = $this->getMock('JMail', array('SetLanguage', 'IsSMTP', 'IsMail'));

		$mail->expects($this->once())
			->method($expected['called']);

		$this->assertThat(
			$mail->useSMTP($auth, $host, $user, $pass, $secure, $port),
			$this->equalTo($expected['return'])
		);
	}
}
?>
